<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBYyAbr0KMSO5pXyEqNYp9_c6KdbYb9P5A&libraries=places&callback=initAutocomplete" async defer></script>

<script type="text/javascript">
  // var labels = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';
  // var labelIndex = 0;
  //
  // function initMarker() {
  //   var bangalore = { lat: 12.97, lng: 77.59 };
  //   var map = new google.maps.Map(document.getElementById('map'), {
  //     zoom: 12,
  //     center: bangalore
  //   });
  //
  //   // This event listener calls addMarker() when the map is clicked.
  //   google.maps.event.addListener(map, 'click', function(event) {
  //     addMarker(event.latLng, map);
  //   });
  //
  //   // Add a marker at the center of the map.
  //   addMarker(bangalore, map);
  // }
  //
  // function addMarker(location, map) {
  //   // Add the marker at the clicked location, and add the next-available label
  //   // from the array of alphabetical characters.
  //   var marker = new google.maps.Marker({
  //     position: location,
  //     label: labels[labelIndex++ % labels.length],
  //     map: map,
  //     draggable: true
  //   });
  // }
  // google.maps.event.addDomListener(window, 'load', initialize);

  function initAutocomplete() {

    var map = new google.maps.Map(document.getElementById('map'), {
      center: {lat: 13.7563309, lng: 100.50176510000006},
      zoom: 13,
      mapTypeId: google.maps.MapTypeId.ROADMAP
    });

    var markers = [];

    // Create the search box and link it to the UI element.
    var input = document.getElementById('pac-input');
    var searchBox = new google.maps.places.SearchBox(input);
    map.controls[google.maps.ControlPosition.TOP_LEFT].push(input);

    // Bias the SearchBox results towards current map's viewport.
    map.addListener('bounds_changed', function() {
      searchBox.setBounds(map.getBounds());
    });

    map.addListener('click', function(event) {
      addMarker(event.latLng);
    });

    function setMarkers() {
      for (var i = 0; i < markers.length; i++) {
        markers[i].setMap(yourMap); //Add the marker to the map
      }
    }

    function hideMarkers() {
      for (var i = 0; i < markers.length; i++) {
        markers[i].setMap(null); //Remove the marker from the map
      }
    }

    function addMarker(location) {
      hideMarkers();
      markers = [];
      var marker = new google.maps.Marker({
        position: location,
        map: map,
        draggable: true
      });
      markers.push(marker);
      updateLatLng(location.lat(), location.lng());

      marker.addListener('dragend', function(event) {
        updateLatLng(event.latLng.lat(), event.latLng.lng());
      });
    }

    // Listen for the event fired when the user selects a prediction and retrieve
    // more details for that place.
    searchBox.addListener('places_changed', function() {
      var places = searchBox.getPlaces();

      if (places.length == 0) {
        return;
      }

      // Clear out the old markers.
      // markers.forEach(function(marker) {
      //   marker.setMap(null);
      // });
      // markers = [];

      // For each place, get the icon, name and location.
      var bounds = new google.maps.LatLngBounds();
      places.forEach(function(place) {
        var icon = {
          url: place.icon,
          size: new google.maps.Size(71, 71),
          origin: new google.maps.Point(0, 0),
          anchor: new google.maps.Point(17, 34),
          scaledSize: new google.maps.Size(25, 25)
        };

        addMarker(place.geometry.location);
        // Create a marker for each place.
        // markers.push(new google.maps.Marker({
        //   map: map,
        //   title: place.name,
        //   position: place.geometry.location,
        //   draggable: true
        // }));

        if (place.geometry.viewport) {
          // Only geocodes have viewport.
          bounds.union(place.geometry.viewport);
        } else {
          bounds.extend(place.geometry.location);
        }
      });
      map.fitBounds(bounds);
    });
  }

  function updateLatLng(lat, lng) {
    $("#event_latitude").val(lat);
    $("#event_longitude").val(lng);
  }
</script>
