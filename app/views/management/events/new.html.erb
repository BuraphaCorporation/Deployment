<div class="row">
  <div class="col-sm-12">
    <div class="card-box">
      <!-- <h4 class="m-t-0 m-b-30 header-title"><b>Fields validation</b></h4> -->

      <%= form_for @event, url: management_events_path, medthod: :post, html: { class: 'form-horizontal group-border-dashed' } do |f| %>
        <div class="row">
          <div class="col-md-7">
            <h4>Event Details</h4>

            <div class="form-group">
              <%= f.label :title, class: 'col-sm-2 control-label' %>
              <div class="col-sm-6">
                <%= f.text_field :title, class: 'form-control', autofocus: true, required: true, placeholder: 'Type something'  %>
              </div>
            </div>


            <div class="form-group">
              <%= f.label :categories, class: 'col-sm-2 control-label' %>
              <div class="col-sm-6">
                <%= f.collection_check_boxes :category_ids, @categories, :id, :title do |c| %>
                  <div class="checkbox">
                    <%= c.check_box %>
                    <%= c.label %>
                  </div>
                <% end %>
              </div>
            </div>

            <div class="form-group">
              <%= f.label :description, class: 'col-sm-2 control-label' %>
              <div class="col-sm-6">
                <%= f.text_area :description, class: 'form-control', rows: 3, required: true %>
              </div>
            </div>

            <div class="form-group">
              <%= f.label :location, class: 'col-sm-2 control-label' %>
              <div class="col-sm-6">
                <%= f.text_field :location, class: 'form-control', autofocus: true, required: true, placeholder: 'ชื่อสถานที่, ถนน, ซอย'  %>
              </div>
            </div>


            <style>
              /*html, body {
                height: 100%;
                margin: 0;
                padding: 0;
              }*/
              #map {
                width: 100%;
                min-height: 300px;
                height: 100%;
              }

              .controls {
                margin-top: 10px;
                border: 1px solid transparent;
                border-radius: 2px 0 0 2px;
                box-sizing: border-box;
                -moz-box-sizing: border-box;
                height: 32px;
                outline: none;
                box-shadow: 0 2px 6px rgba(0, 0, 0, 0.3);
              }

              #pac-input {
                background-color: #fff;
                font-family: Roboto;
                font-size: 15px;
                font-weight: 300;
                margin-left: 12px;
                padding: 0 11px 0 13px;
                text-overflow: ellipsis;
                width: 300px;
              }

              #pac-input:focus {
                border-color: #4d90fe;
              }

              .pac-container {
                font-family: Roboto;
              }

              #type-selector {
                color: #fff;
                background-color: #4d90fe;
                padding: 5px 11px 0px 11px;
              }

              #type-selector label {
                font-family: Roboto;
                font-size: 13px;
                font-weight: 300;
              }
              #target {
                width: 345px;
              }
            </style>
            <div class="row">
              <div class="col-md-11">
                <div class="card-box">
                  <h4 class="m-t-0 m-b-20 header-title"><b>Map</b></h4>
                  <!-- <div id="gmaps-overlay" class="gmaps"></div> -->
                  <input id="pac-input" class="controls" type="text" placeholder="Search Box">
                  <div id="map"></div>
                  <div id="capture"></div>
                  <%= f.hidden_field :latitude %>
                  <%= f.hidden_field :longitude %>
                </div>
              </div>
            </div>
            <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBYyAbr0KMSO5pXyEqNYp9_c6KdbYb9P5A&libraries=places&callback=initAutocomplete" async defer></script>

            <script type="text/javascript">
              // var labels = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';
              // var labelIndex = 0;
              //
              // function initMarker() {
              //   var bangalore = { lat: 12.97, lng: 77.59 };
              //   var map = new google.maps.Map(document.getElementById('map'), {
              //     zoom: 12,
              //     center: bangalore
              //   });
              //
              //   // This event listener calls addMarker() when the map is clicked.
              //   google.maps.event.addListener(map, 'click', function(event) {
              //     addMarker(event.latLng, map);
              //   });
              //
              //   // Add a marker at the center of the map.
              //   addMarker(bangalore, map);
              // }
              //
              // function addMarker(location, map) {
              //   // Add the marker at the clicked location, and add the next-available label
              //   // from the array of alphabetical characters.
              //   var marker = new google.maps.Marker({
              //     position: location,
              //     label: labels[labelIndex++ % labels.length],
              //     map: map,
              //     draggable: true
              //   });
              // }
              // google.maps.event.addDomListener(window, 'load', initialize);

              function initAutocomplete() {

                var map = new google.maps.Map(document.getElementById('map'), {
                  center: {lat: 13.7563309, lng: 100.50176510000006},
                  zoom: 13,
                  mapTypeId: google.maps.MapTypeId.ROADMAP
                });

                var markers = [];

                // Create the search box and link it to the UI element.
                var input = document.getElementById('pac-input');
                var searchBox = new google.maps.places.SearchBox(input);
                map.controls[google.maps.ControlPosition.TOP_LEFT].push(input);

                // Bias the SearchBox results towards current map's viewport.
                map.addListener('bounds_changed', function() {
                  searchBox.setBounds(map.getBounds());
                });

                map.addListener('click', function(event) {
                  addMarker(event.latLng);
                });

                function setMarkers() {
                  for (var i = 0; i < markers.length; i++) {
                    markers[i].setMap(yourMap); //Add the marker to the map
                  }
                }

                function hideMarkers() {
                  for (var i = 0; i < markers.length; i++) {
                    markers[i].setMap(null); //Remove the marker from the map
                  }
                }

                function addMarker(location) {
                  hideMarkers();
                  markers = [];
                  var marker = new google.maps.Marker({
                    position: location,
                    map: map,
                    draggable: true
                  });
                  markers.push(marker);
                  updateLatLng(location.lat(), location.lng());

                  marker.addListener('dragend', function(event) {
                    updateLatLng(event.latLng.lat(), event.latLng.lng());
                  });
                }

                // Listen for the event fired when the user selects a prediction and retrieve
                // more details for that place.
                searchBox.addListener('places_changed', function() {
                  var places = searchBox.getPlaces();

                  if (places.length == 0) {
                    return;
                  }

                  // Clear out the old markers.
                  // markers.forEach(function(marker) {
                  //   marker.setMap(null);
                  // });
                  // markers = [];

                  // For each place, get the icon, name and location.
                  var bounds = new google.maps.LatLngBounds();
                  places.forEach(function(place) {
                    var icon = {
                      url: place.icon,
                      size: new google.maps.Size(71, 71),
                      origin: new google.maps.Point(0, 0),
                      anchor: new google.maps.Point(17, 34),
                      scaledSize: new google.maps.Size(25, 25)
                    };

                    addMarker(place.geometry.location);
                    // Create a marker for each place.
                    // markers.push(new google.maps.Marker({
                    //   map: map,
                    //   title: place.name,
                    //   position: place.geometry.location,
                    //   draggable: true
                    // }));

                    if (place.geometry.viewport) {
                      // Only geocodes have viewport.
                      bounds.union(place.geometry.viewport);
                    } else {
                      bounds.extend(place.geometry.location);
                    }
                  });
                  map.fitBounds(bounds);
                });
              }

              function updateLatLng(lat, lng) {
                $("#event_latitude").val(lat);
                $("#event_longitude").val(lng);
              }
            </script>
        </div>

        <div class="col-md-5">
          <div class="form-group">
            <%= f.label :picture, class: 'col-sm-2 control-label' %>
            <div class="col-sm-10">
              <div class="form-control">
                <%= f.file_field :attachments, type: :file, required: true, multiple: true %>
              </div>
            </div>
          </div>
        </div>
      </div>


      <div class="row">
        <div class="col-md-12">
          <h4>2. Ticket Detail

          <%= link_to_add_association 'Add Ticket', f, :sections,
                                    {
                                      'data-association-insertion-node': '.tickets',
                                      'data-association-insertion-method': :append,
                                      partial: 'section_fields',
                                      id: 'addTickets'
                                    }
                                    %>
         </h4>

          <div class="tickets">
            <%= f.fields_for :sections do |section| %>
              <%= render 'section_fields', f: section %>
            <% end %>
          </div>
        </div>
      </div>

      <div class="row">
        <div class="col-lg-12">
          <button id="submitForm" type="submit" class="btn btn-primary waves-effect waves-light">
            Sumit
          </button>
        </div>
      </div>
      <% end %>
    </div>
  </div>
</div>
